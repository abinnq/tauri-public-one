name: Release-build

on:
  push:
    branches:
      - release-build

jobs:
  release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        # platform: [macos-latest, windows-latest]
        platform: [macos-latest]
    runs-on: ${{ matrix.platform }}

    # permissions:
    #   contents: write
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     config:
    #       - os: macos-latest
    #         arch: x86_64
    #         rust_target: x86_64-apple-darwin
    #       - os: macos-latest
    #         arch: aarch64
    #         rust_target: aarch64-apple-darwin
    #       - os: windows-latest
    #         arch: x86_64
    #         rust_target: x86_64-pc-windows-msvc
    # runs-on: ${{ matrix.config.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # - name: Install dependencies (ubuntu only)
      #   if: matrix.platform == 'ubuntu-20.04'
      #   # You can remove libayatana-appindicator3-dev if you don't use the system tray feature.
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Sync node version and setup cache
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'yarn' # Set this to npm, yarn or pnpm.
      
      - name: Install app dependencies and build it
        run: yarn && yarn custom-config prod && CI=true yarn build 
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          ENABLE_CODE_SIGNING: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
          APPLE_ID: ${{ secrets.APPLE_ID }} 
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }} 
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }} 
      - name: Tauri Action
        uses: tauri-apps/tauri-action@v0.3
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          ENABLE_CODE_SIGNING: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
          APPLE_ID: ${{ secrets.APPLE_ID }} 
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }} 
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }} 
        with:
          tagName: ${{ github.ref_name }} # This only works if your workflow triggers on new tags.
          releaseName: 'App Name v__VERSION__' # tauri-action replaces \_\_VERSION\_\_ with the app version.
          releaseBody: 'See the assets to download and install this version.'
          releaseDraft: true
          prerelease: false